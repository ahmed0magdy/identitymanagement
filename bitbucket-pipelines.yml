image: php:8.1.0-fpm
pipelines:
  default:
    - step:
        size: 2x
        name: Test
        caches:
          - composer
        artifacts:
          - storage/**
          - vendor/**
          - public/**
          - .env
        script:
          #Update Image
          - apt-get update

          #Install Zip
          - apt-get install -qy zlib1g-dev zip unzip libzip-dev libpq-dev
          - pecl install pcov && docker-php-ext-enable pcov
          - docker-php-ext-install zip

          #Install Git
          - apt-get install -qy git
          - apt-get install -qy curl

          #Install MSSQLSRV
          - apt-get update && apt-get install -y gnupg2
          - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          - curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
          - apt-get update
          - ACCEPT_EULA=Y apt-get -y --no-install-recommends install msodbcsql18 mssql-tools unixodbc-dev
          - pecl install sqlsrv
          - pecl install pdo_sqlsrv
          - docker-php-ext-enable sqlsrv pdo_sqlsrv

          - sleep 5
          - /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "SecretGamedAwe69@96" -Q "CREATE DATABASE landlord"
          - sleep 5
          - /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "SecretGamedAwe69@96" -Q "CREATE DATABASE landlord_testing"

          #Install Crypt
          - apt-get install -qy libmcrypt-dev

          #Install Composer Platform Reqs
          - docker-php-ext-install bcmath

          #Copy .env.example to .env
          - cp .env.example .env.pipelines
          - cp .env.example .env
          - cp .env.example .env.testing
          - sleep 5

          - sed -i 's/APP_KEY=/APP_KEY=base64:7DmiDoAFOKvUa9DajFc5andFGB1oel+\/O494dI+Hqno=/g' ".env.testing"
          - sed -i 's/APP_ENV=local/APP_ENV=testing/g' ".env.testing"
          - sed -i 's/DB_DATABASE=landlord/DB_DATABASE=landlord_testing/g' ".env.testing"

          #Install Composer
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer install

          #Migrate Database
          - touch database/database.sqlite
          - php artisan key:generate
          - php artisan migrate
          - php artisan migrate --env=testing
          - php artisan config:cache
          - php artisan config:cache --env=testing

          #Run phpcs
          - ./vendor/bin/phpcs --standard=PSR12 --warning-severity=6 app/ routes/ tests/

          #Run Test Suite
          - php artisan test

        services:
          - database

definitions:
  services:
    database:
      memory: 7128
      image: mcr.microsoft.com/mssql/server:2022-latest
      environment:
        ACCEPT_EULA: "Y"
        MSSQL_SA_PASSWORD: "SecretGamedAwe69@96"
