image: php:8.1.0-fpm
pipelines:
  default:
    - step:
        name: Test
        caches:
          - composer
        artifacts:
          - storage/**
          - vendor/**
          - public/**
          - .env
        script:
          #Update Image
          - apt-get update

          #Install Zip
          - apt-get install -qy zlib1g-dev zip unzip libzip-dev libpq-dev
          - pecl install pcov && docker-php-ext-enable pcov
          - docker-php-ext-install zip

          #Install Git
          - apt-get install -qy git
          - apt-get install -qy curl

          #Install MySql
          - docker-php-ext-install pdo pdo_pgsql
          - apt-get install -qy postgresql-client
          - apt-get update && apt-get install -y gnupg2
          - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          - curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
          - apt-get update
          - ACCEPT_EULA=Y apt-get -y --no-install-recommends install msodbcsql17 unixodbc-dev
          - pecl install sqlsrv
          - pecl install pdo_sqlsrv
          - docker-php-ext-enable sqlsrv pdo_sqlsrv

          - sleep 5
          - sqlcmd -S localhost -U sa -P "SecretGamedAwe69@96"

          #Install Crypt
          - apt-get install -qy libmcrypt-dev

          #Install Composer Platform Reqs
          - docker-php-ext-install bcmath

          #Copy .env.example to .env
          - cp .env.pipelines .env
          - cp .env.pipelines .env.testing

          - sed -i 's/APP_KEY=/APP_KEY=base64:7DmiDoAFOKvUa9DajFc5andFGB1oel+\/O494dI+Hqno=/g' ".env.testing"
          - sed -i 's/APP_ENV=local/APP_ENV=testing/g' ".env.testing"

          #Install Composer
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer install

          #Migrate Database
          - touch database/database.sqlite
          - php artisan key:generate
          - php artisan migrate
          - php artisan config:cache --env=testing
          #          - php artisan l5-swagger:generate

          #Run phpcs
          - ./vendor/bin/phpcs --standard=PSR12 --warning-severity=6 app/ routes/ tests/

          #Run Test Suite
          - php artisan test
        #          - php -dpcov.enabled=1 -dpcov.directory=. -dpcov.exclude="~vendor~" ./vendor/bin/phpunit
        #          - php coverage-checker.php clover.xml 65
        services:
          #Add MySql Database
          - database
    # Additional Manual Step for Deployer if Needed.
definitions:
  services:
    database:
      image: justin2004/mssql_server_tiny
      environment:
        ACCEPT_EULA: "Y"
        MSSQL_SA_PASSWORD: "SecretGamedAwe69@96"
